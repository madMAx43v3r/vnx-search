package vnx.search;

module CrawlProcessor {
	
	vnx.TopicPtr input_text = "frontend.text_responses";			// TextResponse
	
	vnx.TopicPtr input_url_index = "backend.url_index.updates";
	
	vnx.TopicPtr input_page_index = "backend.page_index.updates";
	
	vnx.TopicPtr output_crawl_stats = "backend.crawl_stats";
	
	string url_index_server = "UrlIndex";
	
	string page_index_server = "PageIndex";
	
	string page_content_server = "PageContent";
	
	string crawl_frontend_server = "CrawlFrontend";
	
	int jump_cost = 3;
	
	int max_depth = 6;
	
	int reload_interval = 10800;			// [seconds / (depth + 1) ^ reload_power]
	
	int sync_interval = 3600;				// checking all urls [sec]
	
	int max_per_minute = 12;				// max pages/min for a single domain
	
	int max_num_pending = 100;				// number of fetches
	
	int max_queue_size = 1000;				// number of domains
	
	int max_url_length = 256;
	
	int max_word_length = 64;
	
	int check_interval_ms = 500;			// queue check
	
	int update_interval_ms = 5000;			// queue update
	
	int robots_txt_timeout = 60;			// max time to wait for robots.txt [sec]
	
	float reload_power = 4;
	
	string user_agent = "Googlebot";		// for robots.txt matching
	
	vector<string> protocols;
	
	vector<string> root_urls;
	
	vector<string> domain_blacklist;
	
	
	CrawlStats* get_stats(int limit) const;
	
	void handle(TextResponse sample);
	
	void handle(vnx.keyvalue.KeyValuePair sample);
	
}
