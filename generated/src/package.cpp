
// AUTO GENERATED by vnxcppcodegen

#include <vnx/Topic.h>

#include <vnx/search/ContentParserBase.hxx>
#include <vnx/search/CrawlFrontendBase.hxx>
#include <vnx/search/CrawlProcessorBase.hxx>
#include <vnx/search/HttpResponse.hxx>
#include <vnx/search/PageContent.hxx>
#include <vnx/search/PageIndex.hxx>
#include <vnx/search/PageProcessorBase.hxx>
#include <vnx/search/Response.hxx>
#include <vnx/search/TextResponse.hxx>
#include <vnx/search/UrlIndex.hxx>



namespace vnx {
namespace search {


static void register_all_types() {
	vnx::register_type_code(vnx::search::ContentParserBase::static_create_type_code());
	vnx::register_type_code(vnx::search::CrawlFrontendBase::static_create_type_code());
	vnx::register_type_code(vnx::search::CrawlProcessorBase::static_create_type_code());
	vnx::register_type_code(vnx::search::HttpResponse::static_create_type_code());
	vnx::register_type_code(vnx::search::PageContent::static_create_type_code());
	vnx::register_type_code(vnx::search::PageIndex::static_create_type_code());
	vnx::register_type_code(vnx::search::PageProcessorBase::static_create_type_code());
	vnx::register_type_code(vnx::search::Response::static_create_type_code());
	vnx::register_type_code(vnx::search::TextResponse::static_create_type_code());
	vnx::register_type_code(vnx::search::UrlIndex::static_create_type_code());
}

static struct vnx_static_init {
	vnx_static_init() {
		register_all_types();
	}
} vnx_static_init_;

const vnx::TypeCode* const vnx_native_type_code_ContentParser = vnx::get_type_code(vnx::Hash64(0xbe968e62c4bea207ull));
const vnx::TypeCode* const vnx_native_type_code_ContentParser_parse = vnx::get_type_code(vnx::Hash64(0x3a3496c5361fbf35ull));
const vnx::TypeCode* const vnx_native_type_code_ContentParser_parse_return = vnx::get_type_code(vnx::Hash64(0xa4f19c7005e2d444ull));
const vnx::TypeCode* const vnx_native_type_code_CrawlFrontend = vnx::get_type_code(vnx::Hash64(0xd91536edf3f184e2ull));
const vnx::TypeCode* const vnx_native_type_code_CrawlFrontend_fetch = vnx::get_type_code(vnx::Hash64(0xddf8de1011cf63d2ull));
const vnx::TypeCode* const vnx_native_type_code_CrawlFrontend_fetch_return = vnx::get_type_code(vnx::Hash64(0xce1d8d53217a282eull));
const vnx::TypeCode* const vnx_native_type_code_CrawlFrontend_handle_vnx_search_HttpResponse = vnx::get_type_code(vnx::Hash64(0x3c451150d4eaa9ebull));
const vnx::TypeCode* const vnx_native_type_code_CrawlFrontend_handle_vnx_search_HttpResponse_return = vnx::get_type_code(vnx::Hash64(0x1d67c2d26b1211d3ull));
const vnx::TypeCode* const vnx_native_type_code_CrawlFrontend_register_parser = vnx::get_type_code(vnx::Hash64(0x4b91d9c8a161bbfdull));
const vnx::TypeCode* const vnx_native_type_code_CrawlFrontend_register_parser_return = vnx::get_type_code(vnx::Hash64(0x8ced9de5e282cceaull));
const vnx::TypeCode* const vnx_native_type_code_CrawlProcessor = vnx::get_type_code(vnx::Hash64(0x508848d1f9d97d9full));
const vnx::TypeCode* const vnx_native_type_code_HttpResponse = vnx::get_type_code(vnx::Hash64(0xd6552db423d70e21ull));
const vnx::TypeCode* const vnx_native_type_code_PageContent = vnx::get_type_code(vnx::Hash64(0x4cd00be0870fbe22ull));
const vnx::TypeCode* const vnx_native_type_code_PageIndex = vnx::get_type_code(vnx::Hash64(0x4c9c9cf43a382f0ull));
const vnx::TypeCode* const vnx_native_type_code_PageProcessor = vnx::get_type_code(vnx::Hash64(0xd130b1014d9ffc6full));
const vnx::TypeCode* const vnx_native_type_code_PageProcessor_handle_vnx_search_TextResponse = vnx::get_type_code(vnx::Hash64(0x1566b79c7e096d3ull));
const vnx::TypeCode* const vnx_native_type_code_PageProcessor_handle_vnx_search_TextResponse_return = vnx::get_type_code(vnx::Hash64(0x4118b7a166ff96c1ull));
const vnx::TypeCode* const vnx_native_type_code_Response = vnx::get_type_code(vnx::Hash64(0xcf371c90803a778cull));
const vnx::TypeCode* const vnx_native_type_code_TextResponse = vnx::get_type_code(vnx::Hash64(0x7cee1cd5b88ec569ull));
const vnx::TypeCode* const vnx_native_type_code_UrlIndex = vnx::get_type_code(vnx::Hash64(0xab26319d1802d1b6ull));

} // namespace vnx
} // namespace search
