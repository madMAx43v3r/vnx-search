
// AUTO GENERATED by vnxcppcodegen

#ifndef INCLUDE_vnx_search_CrawlFrontend_CLIENT_HXX_
#define INCLUDE_vnx_search_CrawlFrontend_CLIENT_HXX_

#include <vnx/Client.h>
#include <vnx/Hash64.h>
#include <vnx/Module.h>
#include <vnx/TopicPtr.h>
#include <vnx/search/HttpResponse.hxx>
#include <vnx/search/UrlIndex.hxx>


namespace vnx {
namespace search {

class CrawlFrontendClient : public vnx::Client {
public:
	CrawlFrontendClient(const std::string& service_name);
	
	CrawlFrontendClient(vnx::Hash64 service_addr);
	
	::std::shared_ptr<const ::vnx::search::UrlIndex> fetch(const ::std::string& url);
	
	void handle(const ::std::shared_ptr<const ::vnx::search::HttpResponse>& sample);
	
	void handle_async(const ::std::shared_ptr<const ::vnx::search::HttpResponse>& sample);
	
	void register_parser(const ::vnx::Hash64& address, const ::std::vector<::std::string>& mime_types, const ::int32_t& num_threads);
	
	void register_parser_async(const ::vnx::Hash64& address, const ::std::vector<::std::string>& mime_types, const ::int32_t& num_threads);
	
};


} // namespace vnx
} // namespace search

#endif // INCLUDE_vnx_search_CrawlFrontend_CLIENT_HXX_
