
// AUTO GENERATED by vnxcppcodegen

#ifndef INCLUDE_vnx_search_CrawlProcessor_CLIENT_HXX_
#define INCLUDE_vnx_search_CrawlProcessor_CLIENT_HXX_

#include <vnx/Client.h>
#include <vnx/Module.h>
#include <vnx/Object.hpp>
#include <vnx/TopicPtr.hpp>
#include <vnx/keyvalue/KeyValuePair.hxx>
#include <vnx/search/PageIndex.hxx>
#include <vnx/search/TextResponse.hxx>


namespace vnx {
namespace search {

class CrawlProcessorClient : public vnx::Client {
public:
	CrawlProcessorClient(const std::string& service_name);
	
	CrawlProcessorClient(vnx::Hash64 service_addr);
	
	void _page_process_callback(const std::string& url_key, const std::shared_ptr<const ::vnx::search::PageIndex>& index, const vnx::bool_t& is_reprocess);
	
	void _page_process_callback_async(const std::string& url_key, const std::shared_ptr<const ::vnx::search::PageIndex>& index, const vnx::bool_t& is_reprocess);
	
	::vnx::Object get_stats(const int32_t& limit);
	
};


} // namespace vnx
} // namespace search

#endif // INCLUDE_vnx_search_CrawlProcessor_CLIENT_HXX_
